pipeline {

    agent none
    
    environment {
        GIT_CREDS = credentials('git')
    }
    
    tools {
        // Note: this should match with the tool name configured in your jenkins instance (JENKINS_URL/configureTools/)
        maven "Maven 3.6.3"
    }
    

    stages {
        stage("Clone Code") {
            agent {
                label "master"
            }
            steps {
                    git 'https://github.com/IAMDEH/simple-java-maven-app.git';
            }

        }
        stage('Compile') {
            agent {
                label "master"
            }
            steps {
                sh 'mvn -B -DskipTests clean package'
            }

        }
        stage('Test') {
            agent {
                label "master"
            }
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }

        }
        stage('Docker Build & Push') {
            agent {
                label "master"
            }
            steps {
                sh "docker build -t 10.10.10.14:5000/demo:${env.GIT_COMMIT} ."
                sh "docker push 10.10.10.14:5000/demo:${env.GIT_COMMIT}"
            }              
                        
        }
        stage('Promote To Staging') {
            agent {
                docker {
                    image 'argoproj/argo-cd-ci-builder:v0.13.1'
                    args '--volumes-from 7bd9e79968eb8897fd00e4381b260b637e041a0e90fc135871790cf2944480bd'
                }
            }        
            steps {
                sh "rm -rf ./argocd-demo-deploy"
                sh "git clone https://$GIT_CREDS_USR:$GIT_CREDS_PSW@github.com/IAMDEH/argocd-demo-deploy.git"
                sh "git config --global user.email 'iamdehman@gmail.com'"
                
                dir("argocd-demo-deploy") {
                    sh "cd ./e2e && kustomize edit set image 10.10.10.14:5000/demo:${env.GIT_COMMIT}"
                    sh "git commit -am 'Publish new version' && git push || echo 'no changes'"
                }
            }              
                        
        }
    }
}
        
